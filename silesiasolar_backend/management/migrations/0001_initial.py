# Generated by Django 3.0.6 on 2020-05-12 17:03

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Measurement',
            fields=[
                ('measurement', models.CharField(max_length=64, primary_key=True, serialize=False)),
                ('type', models.PositiveIntegerField(choices=[(1, 'CURRENT'), (2, 'HISTORICAL')])),
            ],
        ),
        migrations.CreateModel(
            name='Meter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('type', models.PositiveIntegerField(choices=[(1, 'SINGLE_DIRECTIONAL'), (2, 'BI_DIRECTIONAL')])),
            ],
        ),
        migrations.CreateModel(
            name='Register',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.PositiveIntegerField()),
                ('unit', models.CharField(blank=True, max_length=8, null=True)),
                ('type', models.PositiveIntegerField(choices=[(1, 'INT'), (2, 'LONG'), (3, 'FLOAT')])),
                ('function_code', models.PositiveIntegerField(choices=[(3, 'READ_HOLDING_REGISTERS'), (4, 'READ_INPUT_REGISTERS')])),
                ('sf_address', models.PositiveIntegerField(blank=True, null=True)),
                ('sf_constant', models.FloatField(default=1)),
                ('measurement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='management.Measurement')),
                ('meter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='management.Meter')),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('street', models.CharField(max_length=32)),
                ('number', models.CharField(max_length=8)),
                ('city', models.CharField(max_length=32)),
                ('zip_code', models.CharField(max_length=6, validators=[django.core.validators.RegexValidator(regex='^[0-9]{2}-[0-9]{3}$')])),
                ('coord_x', models.FloatField(blank=True, null=True)),
                ('coord_y', models.FloatField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('street', 'number', 'city')},
            },
        ),
        migrations.CreateModel(
            name='Host',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.CharField(max_length=64)),
                ('port', models.PositiveIntegerField()),
                ('slave_address', models.PositiveSmallIntegerField()),
                ('description', models.CharField(max_length=128)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='management.Location')),
                ('meter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='management.Meter')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('ip', 'port', 'slave_address')},
            },
        ),
        migrations.CreateModel(
            name='ChosenMeasurements',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('host', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='management.Host')),
                ('measurement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='management.Measurement')),
            ],
        ),
    ]
